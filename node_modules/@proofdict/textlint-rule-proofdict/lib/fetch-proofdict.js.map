{"version":3,"sources":["../src/fetch-proofdict.js"],"names":["fetch","require","delayPromise","ms","Promise","resolve","setTimeout","timeoutPromise","promise","timeout","then","error","Error","name","race","fetchProofdict","URL","res","ok","json"],"mappings":"AAAA;AACA;;;;;;;AACA,IAAMA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAP,GAA4BD,KAA1C;;AAEA,SAASE,YAAT,CAAsBC,EAAtB,EAA0B;AACtB,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkB;AACjCC,IAAAA,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAV;AACH,GAFM,CAAP;AAGH;;AAED,SAASI,cAAT,CAAwBC,OAAxB,EAAiCL,EAAjC,EAAqC;AACjC,MAAMM,OAAO,GAAGP,YAAY,CAACC,EAAD,CAAZ,CAAiBO,IAAjB,CAAsB,YAAW;AAC7C,QAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,+BAA+BT,EAA/B,GAAoC,KAA9C,CAAd;AACAQ,IAAAA,KAAK,CAACE,IAAN,GAAa,cAAb;AACA,UAAMF,KAAN;AACH,GAJe,CAAhB;AAKA,SAAOP,OAAO,CAACU,IAAR,CAAa,CAACN,OAAD,EAAUC,OAAV,CAAb,CAAP;AACH;;AAEM,SAASM,cAAT,OAAiC;AAAA,MAAPC,GAAO,QAAPA,GAAO;AACpC,SAAOT,cAAc,CAACP,KAAK,CAACgB,GAAD,CAAN,EAAa,IAAb,CAAd,CAAiCN,IAAjC,CAAsC,UAAAO,GAAG,EAAI;AAChD,QAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,YAAMN,KAAK,mCAA4BI,GAA5B,EAAX;AACH;;AACD,WAAOC,GAAG,CAACE,IAAJ,EAAP;AACH,GALM,CAAP;AAMH","sourcesContent":["// MIT Â© 2018 azu\n\"use strict\";\nconst fetch = require(\"fetch-ponyfill\")().fetch;\n\nfunction delayPromise(ms) {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, ms);\n    });\n}\n\nfunction timeoutPromise(promise, ms) {\n    const timeout = delayPromise(ms).then(function() {\n        const error = new Error(\"Operation timed out after \" + ms + \" ms\");\n        error.name = \"TimeoutError\";\n        throw error;\n    });\n    return Promise.race([promise, timeout]);\n}\n\nexport function fetchProofdict({ URL }) {\n    return timeoutPromise(fetch(URL), 5000).then(res => {\n        if (!res.ok) {\n            throw Error(`Proofdict is not found: ${URL}`);\n        }\n        return res.json();\n    });\n}\n"],"file":"fetch-proofdict.js"}